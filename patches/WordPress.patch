diff --git a/wp-content/db.php b/wp-content/db.php
new file mode 100755
index 0000000000..8098000615
--- /dev/null
+++ b/wp-content/db.php
@@ -0,0 +1,58 @@
+<?php
+/**
+ * Plugin Name: SQLite integration (Drop-in)
+ * Version: 1.0.0
+ * Author: WordPress Performance Team
+ * Author URI: https://make.wordpress.org/performance/
+ *
+ * This file is auto-generated and copied from the sqlite plugin.
+ * Please don't edit this file directly.
+ *
+ * @package wp-sqlite-integration
+ */
+
+define( 'SQLITE_DB_DROPIN_VERSION', '1.8.0' );
+
+// Tweak to allow copy-pasting the file without having to run string-replacements.
+$sqlite_plugin_implementation_folder_path = '/var/www/html/wp-content/plugins/sqlite-database-integration';
+if ( ! file_exists( $sqlite_plugin_implementation_folder_path ) ) { // Check that the folder exists.
+	$sqlite_plugin_implementation_folder_path = realpath( __DIR__ . '/plugins/sqlite-database-integration' );
+}
+
+// Bail early if the SQLite implementation was not located in the plugin.
+if ( ! $sqlite_plugin_implementation_folder_path || ! file_exists( $sqlite_plugin_implementation_folder_path . '/wp-includes/sqlite/db.php' ) ) {
+	return;
+}
+
+// Constant for backward compatibility.
+if ( ! defined( 'DATABASE_TYPE' ) ) {
+	define( 'DATABASE_TYPE', 'sqlite' );
+}
+// Define SQLite constant.
+if ( ! defined( 'DB_ENGINE' ) ) {
+	define( 'DB_ENGINE', 'sqlite' );
+}
+
+// Require the implementation from the plugin.
+require_once $sqlite_plugin_implementation_folder_path . '/wp-includes/sqlite/db.php';
+
+// Activate the performance-lab plugin if it is not already activated.
+add_action(
+	'admin_footer',
+	function() {
+		if ( defined( 'SQLITE_MAIN_FILE' ) ) {
+			return;
+		}
+		if ( ! function_exists( 'activate_plugin' ) ) {
+			require_once ABSPATH . 'wp-admin/includes/plugin.php';
+		}
+		if ( is_plugin_inactive( 'sqlite-database-integration/load.php' ) ) {
+			// If `activate_plugin()` returns a value other than null (like WP_Error),
+			// the plugin could not be found. Try with a hardcoded string,
+			// because that probably means the file was directly copy-pasted.
+			if ( null !== activate_plugin( 'sqlite-database-integration/load.php', '', false, true ) ) {
+				activate_plugin( 'sqlite-database-integration/load.php', '', false, true );
+			}
+		}
+	}
+);

diff --git a/wp-includes/capabilities.php b/wp-includes/capabilities.php
index d6c340c95e..d282285b23 100644
--- a/wp-includes/capabilities.php
+++ b/wp-includes/capabilities.php
@@ -907,8 +907,10 @@ function map_meta_cap( $cap, $user_id, ...$args ) {
  * @return bool Whether the current user has the given capability. If `$capability` is a meta cap and `$object_id` is
  *              passed, whether the current user has the given meta capability for the given object.
  */
-function current_user_can( $capability, ...$args ) {
-	return user_can( wp_get_current_user(), $capability, ...$args );
+if (!function_exists('current_user_can')) {
+	function current_user_can( $capability, ...$args ) {
+		return user_can( wp_get_current_user(), $capability, ...$args );
+	}
 }
 
 /**
diff --git a/wp-includes/formatting.php b/wp-includes/formatting.php
index 8c77d167a4..ec73f88ec5 100644
--- a/wp-includes/formatting.php
+++ b/wp-includes/formatting.php
@@ -5561,18 +5561,20 @@ function wp_strip_all_tags( $text, $remove_breaks = false ) {
  * @param string $str String to sanitize.
  * @return string Sanitized string.
  */
-function sanitize_text_field( $str ) {
-	$filtered = _sanitize_text_fields( $str, false );
+if (!function_exists('sanitize_text_field')) {
+	function sanitize_text_field( $str ) {
+		$filtered = _sanitize_text_fields( $str, false );
 
-	/**
-	 * Filters a sanitized text field string.
-	 *
-	 * @since 2.9.0
-	 *
-	 * @param string $filtered The sanitized string.
-	 * @param string $str      The string prior to being sanitized.
-	 */
-	return apply_filters( 'sanitize_text_field', $filtered, $str );
+		/**
+		 * Filters a sanitized text field string.
+		 *
+		 * @since 2.9.0
+		 *
+		 * @param string $filtered The sanitized string.
+		 * @param string $str      The string prior to being sanitized.
+		 */
+		return apply_filters( 'sanitize_text_field', $filtered, $str );
+	}
 }
 
 /**
